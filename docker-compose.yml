version: '3.8'

services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: sslmonitor
      POSTGRES_USER: ssluser
      POSTGRES_PASSWORD: sslpass123
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ssluser -d sslmonitor"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  backend:
    build: ./backend
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://ssluser:sslpass123@postgres:5432/sslmonitor
      - REDIS_URL=redis://redis:6379
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./backend:/app

  celery-worker:
    build: ./backend
    command: celery -A celery_worker worker --loglevel=info
    environment:
      - DATABASE_URL=postgresql://ssluser:sslpass123@postgres:5432/sslmonitor
      - REDIS_URL=redis://redis:6379
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./backend:/app

  celery-beat:
    build: ./backend
    command: celery -A celery_worker beat --loglevel=info
    environment:
      - DATABASE_URL=postgresql://ssluser:sslpass123@postgres:5432/sslmonitor
      - REDIS_URL=redis://redis:6379
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./backend:/app

  frontend:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./frontend:/usr/share/nginx/html:ro
    depends_on:
      - backend

volumes:
  postgres_data:

