#!/bin/bash

# SSL Monitor Pro - Render.com Setup for GitLab Migration
# Usage: ./scripts/setup-render.sh

echo "üîß Configuring Render.com for GitLab Migration..."
echo "================================================"

# Load secrets
if [ -f ".migration-secrets" ]; then
    source .migration-secrets
else
    echo "‚ùå Error: .migration-secrets file not found!"
    exit 1
fi

echo ""
echo "üìã Current Render.com Configuration:"
echo "   ‚Ä¢ Service: ssl-monitor-api"
echo "   ‚Ä¢ URL: https://ssl-monitor-api.onrender.com"
echo "   ‚Ä¢ Current Source: GitHub (root/ssl-monitor-pro)"
echo "   ‚Ä¢ Target Source: GitLab (root/ssl-monitor-pro)"
echo ""

echo "üîß Manual Configuration Required:"
echo ""
echo "1Ô∏è‚É£ Render.com Dashboard Steps:"
echo "   ‚Ä¢ Go to: https://dashboard.render.com"
echo "   ‚Ä¢ Find service: ssl-monitor-api"
echo "   ‚Ä¢ Go to: Settings ‚Üí Build & Deploy"
echo ""
echo "2Ô∏è‚É£ Current Configuration (GitHub):"
echo "   ‚Ä¢ Repository: 192.168.1.10/root/ssl-monitor-pro"
echo "   ‚Ä¢ Branch: main"
echo "   ‚Ä¢ Auto-Deploy: Yes"
echo ""
echo "3Ô∏è‚É£ New Configuration (GitLab):"
echo "   ‚Ä¢ Repository: MANUAL (we'll use Deploy Hook)"
echo "   ‚Ä¢ Branch: main"
echo "   ‚Ä¢ Auto-Deploy: Via GitLab CI/CD"
echo "   ‚Ä¢ Deploy Hook: $RENDER_DEPLOY_HOOK_URL"
echo ""

echo "4Ô∏è‚É£ Steps to Configure:"
echo "   a) Disable GitHub Auto-Deploy:"
echo "      - Set Auto-Deploy: Disabled"
echo "      - Set Manual Deploy Only: Enabled"
echo ""
echo "   b) Get Deploy Hook URL:"
echo "      - Go to: Settings ‚Üí Deploy Hook"
echo "      - Copy URL (should be like):"
echo "        https://api.render.com/deploy/srv-xxxxx?key=xxxxx"
echo "      - Update .migration-secrets with real URL"
echo ""
echo "   c) Test Deploy Hook:"
echo "      curl -X POST \$RENDER_DEPLOY_HOOK_URL"
echo ""

echo "5Ô∏è‚É£ GitLab CI/CD Integration:"
echo "   ‚Ä¢ Deploy Hook URL is already in GitLab Variables"
echo "   ‚Ä¢ GitLab pipeline will trigger deploys via webhook"
echo "   ‚Ä¢ No direct Git connection needed"
echo ""

echo "üß™ Testing Deploy Hook (Demo):"
echo "   Testing with demo URL..."
if [ ! -z "$RENDER_DEPLOY_HOOK_URL" ] && [[ "$RENDER_DEPLOY_HOOK_URL" != *"demo"* ]]; then
    echo "   ‚ö†Ô∏è  Real URL detected - not testing automatically"
    echo "   Manual test: curl -X POST $RENDER_DEPLOY_HOOK_URL"
else
    echo "   ‚úÖ Demo URL - safe to test"
    echo "   curl -X POST $RENDER_DEPLOY_HOOK_URL"
fi

echo ""
echo "üìä Expected Results:"
echo "   ‚Ä¢ Render Dashboard shows new deploy starting"
echo "   ‚Ä¢ Deploy logs show build process"
echo "   ‚Ä¢ Service remains available during deploy"
echo "   ‚Ä¢ New version deployed successfully"
echo ""

echo "‚ö†Ô∏è  Important Notes:"
echo "   ‚Ä¢ Keep GitHub auto-deploy DISABLED during migration"
echo "   ‚Ä¢ Test deploy hook thoroughly before switching"
echo "   ‚Ä¢ Monitor first few deploys manually"
echo "   ‚Ä¢ Have rollback plan ready"
echo ""

echo "‚úÖ Render.com Configuration Complete!"
echo ""
echo "üìã Next Steps:"
echo "   1. Complete manual configuration in Render Dashboard"
echo "   2. Test deploy hook with real URL"
echo "   3. Verify GitLab Variables are set"
echo "   4. Proceed to Cloudflare Pages configuration"
echo ""
echo "üîó Links:"
echo "   ‚Ä¢ Render Dashboard: https://dashboard.render.com"
echo "   ‚Ä¢ Service: ssl-monitor-api"
echo "   ‚Ä¢ GitLab Variables: http://192.168.1.10/root/ssl-monitor-pro/-/settings/ci_cd"
