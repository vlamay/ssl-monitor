═══════════════════════════════════════════════════════════════
  🚀 КОМАНДЫ ДЛЯ СОЗДАНИЯ GITHUB РЕПОЗИТОРИЯ
═══════════════════════════════════════════════════════════════

ШАГ 1: СОЗДАТЬ РЕПОЗИТОРИЙ НА GITHUB
────────────────────────────────────────────────────────────

1. Откройте в браузере: https://github.com/new

2. Заполните форму:
   Repository name:     ssl-monitor
   Description:         Enterprise SSL Certificate Monitoring Platform
   Visibility:          Public ✓
   Initialize:          [ ] Don't add README (у нас уже есть)
                        [ ] Don't add .gitignore (у нас уже есть)
                        [ ] No license yet

3. Нажмите "Create repository"


ШАГ 2: ВЫПОЛНИТЬ КОМАНДЫ (СКОПИРУЙТЕ ВСЁ СРАЗУ)
────────────────────────────────────────────────────────────

cd /home/vmaidaniuk/ssl-monitor

# Замените YOUR_USERNAME на ваш GitHub username
git remote add origin https://github.com/YOUR_USERNAME/ssl-monitor.git

git branch -M main

git push -u origin main


ПРИМЕР (ЗАМЕНИТЕ maidaniuk на ваш username):
────────────────────────────────────────────────────────────

git remote add origin https://github.com/maidaniuk/ssl-monitor.git
git push -u origin main


ШАГ 3: ПРОВЕРКА
────────────────────────────────────────────────────────────

После успешного push откройте:
https://github.com/YOUR_USERNAME/ssl-monitor

Вы должны увидеть:
✓ 37 files
✓ README.md with project description
✓ All code files


ШАГ 4: ДЕПЛОЙ НА RENDER.COM
────────────────────────────────────────────────────────────

1. Откройте: https://render.com

2. Sign up with GitHub account

3. В dashboard: "New +" → "Web Service"

4. Выберите репозиторий: ssl-monitor

5. Render автоматически обнаружит render.yaml

6. Нажмите "Apply" для создания всех сервисов:
   - ssl-monitor-backend (Web Service)
   - ssl-monitor-worker (Background Worker)
   - ssl-monitor-beat (Scheduler)
   - ssl-monitor-db (PostgreSQL)

7. В environment variables добавьте (опционально):
   TELEGRAM_BOT_TOKEN = your_bot_token
   TELEGRAM_CHAT_ID = your_chat_id

8. Подождите деплоя (~15 минут)

9. Ваш API будет доступен по адресу:
   https://ssl-monitor-backend.onrender.com


ШАГ 5: ТЕСТИРОВАНИЕ PRODUCTION
────────────────────────────────────────────────────────────

# Test health
curl https://ssl-monitor-backend.onrender.com/health

# Test plans
curl https://ssl-monitor-backend.onrender.com/billing/plans

# Open API docs
open https://ssl-monitor-backend.onrender.com/docs


ШАГ 6: STRIPE WEBHOOK
────────────────────────────────────────────────────────────

1. Откройте Stripe Dashboard: https://dashboard.stripe.com

2. Developers → Webhooks → Add endpoint

3. URL: https://ssl-monitor-backend.onrender.com/billing/webhook

4. Select events:
   ✓ checkout.session.completed
   ✓ customer.subscription.created
   ✓ customer.subscription.updated
   ✓ customer.subscription.deleted
   ✓ invoice.payment_succeeded
   ✓ invoice.payment_failed

5. Скопируйте signing secret (whsec_...)

6. В Render добавьте environment variable:
   STRIPE_WEBHOOK_SECRET = whsec_xxxxx


ШАГ 7: GO LIVE!
────────────────────────────────────────────────────────────

После успешного деплоя:

1. Протестируйте все функции
2. Поделитесь на LinkedIn
3. Отправьте 10 emails
4. Запустите LAUNCH50 promo
5. Получите первого клиента!


═══════════════════════════════════════════════════════════════
  🎯 ЦЕЛЬ: Первый платный клиент за 7 дней!
  💰 ЦЕЛЬ: €1000 MRR за 30 дней!
═══════════════════════════════════════════════════════════════

Удачи! 🚀

